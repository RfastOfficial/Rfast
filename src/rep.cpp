//Author: Manos Papadakis

// This file was generated by compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#define ARMA_64BIT_WORD
#include <RcppArmadillo.h>
#include <R.h>
#include <Rinternals.h>

using namespace Rcpp;

SEXP rep_col(SEXP x,const int n){
	const int p=Rf_length(x);
	SEXP f;
	int i,j;
	switch(TYPEOF(x)){
		case INTSXP:{
			f=PROTECT(Rf_allocMatrix(INTSXP,p,n));
			int *ff=INTEGER(f),*xx=INTEGER(x),*start=xx;
			for(i=0;i<n;++i){
				for(start=xx,j=0;j<p;++j,++ff,++start){
					*ff=*start;
				}
			}
			break;
		}
		default:{
			f=PROTECT(Rf_allocMatrix(REALSXP,p,n));
			double *ff=REAL(f),*xx=REAL(x),*start=xx;
		  	for(i=0;i<n;++i){
				for(start=xx,j=0;j<p;++j,++ff,++start){
					*ff=*start;
				}
		  	}
		 	break;
		}
	}
	UNPROTECT(1);
  	return f;
}

RcppExport SEXP Rfast_rep_col(SEXP x,SEXP nSEXP){
BEGIN_RCPP
    RObject __result;
    RNGScope __rngScope;
    traits::input_parameter< const int >::type n(nSEXP);
    __result = rep_col(x,n);
    return __result;
END_RCPP
}



SEXP rep_row(SEXP x,const int n){
	const int p=Rf_length(x);
	SEXP F;
	switch(TYPEOF(x)){
		case INTSXP:{
			F=PROTECT(Rf_allocMatrix(INTSXP,n,p));
			int *xx=INTEGER(x),*f=INTEGER(F),*endx=xx+p,*startf,val;
			for(;xx!=endx;++xx){
				val=*xx;
				for(startf=f,f+=n;startf!=f;++startf){
				  *startf=val;
				}
			}
			break;
		}
		default:{
			F=PROTECT(Rf_allocMatrix(REALSXP,n,p));
			double *xx=REAL(x),*f=REAL(F),*endx=xx+p,*startf,val;
			for(;xx!=endx;++xx){
				val=*xx;
				for(startf=f,f+=n;startf!=f;++startf){
				  *startf=val;
				}
			}
		 	break;
		}
	}
	UNPROTECT(1);
  	return F;
}


RcppExport SEXP Rfast_rep_row(SEXP x,SEXP nSEXP){
BEGIN_RCPP
    RObject __result;
    RNGScope __rngScope;
    traits::input_parameter< const int >::type n(nSEXP);
    __result = rep_row(x,n);
    return __result;
END_RCPP
}
